//aim: implement converting a infix mathematical equation into postfix 
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define MAX 100
int precedence(char c) 
{
    if (c == '+' || c == '-') return 1;
     if (c == '*' || c == '/') return 2;
     if (c == '^') return 3;
     return 0;
}
void Postfix(char* infix) 
{
 char stack[MAX];
 int top = -1;
 char postfix[MAX];
 int j = 0;

 for (int i = 0; infix[i]; i++) 
{
   if (isalnum(infix[i])) 
{
   postfix[j++] = infix[i];
 } 
else if (infix[i] == '(') 
{
   stack[++top] = infix[i];
 } else if (infix[i] == ')') 
{
    while (top >= 0 && stack[top] != '(') {
   postfix[j++] = stack[top--];
 }
   top--;
 } else 
  {
   while (top >= 0 && stack[top] != '(' && precedence(stack[top]) >= precedence(infix[i]))
      {
     postfix[j++] = stack[top--];
     }
   stack[++top] = infix[i];
   }
 }
 while (top >= 0) 
{
   postfix[j++] = stack[top--];
  }
   postfix[j] = '\0';
   printf("Postfix: %s\n", postfix);
}
int main() 
{
   char infix[MAX];
   printf("Enter infix expression: ");
   fgets(infix, MAX, stdin);
   infix[strcspn(infix, "\n")] = 0;
   Postfix(infix);
   return 0;
}
